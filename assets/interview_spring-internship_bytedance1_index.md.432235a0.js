import{_ as t,a as r,b as E}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.bc46e4f5.js";import{_ as y}from"./chunks/CloudinaryImg.vue_vue_type_script_setup_true_lang.87fcf701.js";import{_ as i,o as d,c as b,H as n,k as s,a as p,Q as a}from"./chunks/framework.926cbeec.js";import"./chunks/commonjsHelpers.725317a4.js";const O=JSON.parse('{"title":"【字节跳动】前端一面面经","description":"","frontmatter":{},"headers":[],"relativePath":"interview/spring-internship/bytedance1/index.md","filePath":"interview/spring-internship/bytedance1/index.md","lastUpdated":1696923443000}'),u={name:"interview/spring-internship/bytedance1/index.md"},h=s("h1",{id:"【字节跳动】前端一面面经",tabindex:"-1"},[p("【字节跳动】前端一面面经 "),s("a",{class:"header-anchor",href:"#【字节跳动】前端一面面经","aria-label":'Permalink to "【字节跳动】前端一面面经"'},"​")],-1),F=s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},"TIP"),s("p",null,"文章编写于 2020 年 06 月 11 日 —— 当时春招面试字节跳动一面面经。")],-1),m=s("h2",{id:"投递初",tabindex:"-1"},[p("投递初 "),s("a",{class:"header-anchor",href:"#投递初","aria-label":'Permalink to "投递初"'},"​")],-1),g=s("p",null,"春招过去了，面了两次腾讯，两次一面直接 gg，但这两份经历对我是有很大帮助的，体会到了一定差距。但在 6 月份，看了牛客网讨论区，又发现了字节跳动一直在招人，从未停止过，而且正好某天瞧见了内推码，于是乎，我又想尝试一下了，赶紧迭代一下简历，投！投！投！",-1),C=a('<h3 id="要求" tabindex="-1">要求 <a class="header-anchor" href="#要求" aria-label="Permalink to &quot;要求&quot;">​</a></h3><p>1、计算机、软件相关专业； 2、熟悉 HTML, CSS, JavaScript 和 HTTP 协议基本知识； 3、熟悉常用的数据结构以及其使用场景； 4、有参与设计和实现的项目（无论大小）； 5、了解浏览器调试工具； 6、有强烈的求知欲和进取心，具有扎实的编程功底，良好的编程习惯。</p><h3 id="加分项" tabindex="-1">加分项： <a class="header-anchor" href="#加分项" aria-label="Permalink to &quot;加分项：&quot;">​</a></h3><p>1、有过数据可视化相关经验； 2、了解 JavaScript 依赖管理； 3、了解 Webpack, React, SASS, ES6 基本原理以及它们解决的问题； 4、了解过不限于 Node.js, Python, Ruby 的任意一门脚本语言； 5、有 Github 账号并有项目。</p><h2 id="投递完" tabindex="-1">投递完 <a class="header-anchor" href="#投递完" aria-label="Permalink to &quot;投递完&quot;">​</a></h2><p>不得不说，字节的处理效率真的是高，2 号投的，3 号就收到了 HR 小姐姐的电话询问，简单询问做过什么项目，用的是什么技术栈，然后有没有用过 React，最后一句：如果后续简历通过了，我们会联系您进行面试。</p><p>然后再 5 号，下午还在做网络安全的实验，就收到微信消息，HR 小姐姐加我然后跟我约下周面试时间。最后，选择了 8 号（周一）晚上 7 点 30 约一面，话不多说，我们进入正题。</p><h2 id="面经" tabindex="-1">面经 <a class="header-anchor" href="#面经" aria-label="Permalink to &quot;面经&quot;">​</a></h2><h3 id="自我介绍" tabindex="-1">自我介绍 <a class="header-anchor" href="#自我介绍" aria-label="Permalink to &quot;自我介绍&quot;">​</a></h3><p>熟悉的开头，这里就不多说了，跳过...</p><h3 id="地址栏输入-url-然后经历了什么-浏览器此时又经历了什么" tabindex="-1">地址栏输入 url，然后经历了什么，浏览器此时又经历了什么 <a class="header-anchor" href="#地址栏输入-url-然后经历了什么-浏览器此时又经历了什么" aria-label="Permalink to &quot;地址栏输入 url，然后经历了什么，浏览器此时又经历了什么&quot;">​</a></h3><h3 id="从-url-输入到页面展现到底发生什么" tabindex="-1">从 URL 输入到页面展现到底发生什么？ <a class="header-anchor" href="#从-url-输入到页面展现到底发生什么" aria-label="Permalink to &quot;从 URL 输入到页面展现到底发生什么？&quot;">​</a></h3><details><summary><b>参考答案</b></summary><a href="https://segmentfault.com/a/1190000017184701">推荐阅读：从 URL 输入到页面展现到底发生什么？</a><p><a href="https://juejin.im/post/5ed0d289e51d45783d0ea4b7">推荐阅读：前端面试：http 专场，你需要懂的知识</a></p><p><a href="https://juejin.im/post/5e76bd516fb9a07cce750746">推荐阅读：（建议精读）HTTP 灵魂之问，巩固你的 HTTP 知识体系</a></p></details><h4 id="浏览器解析渲染页面" tabindex="-1">浏览器解析渲染页面 <a class="header-anchor" href="#浏览器解析渲染页面" aria-label="Permalink to &quot;浏览器解析渲染页面&quot;">​</a></h4>',14),v=s("summary",null,[s("b",null,"参考答案")],-1),A=s("ul",null,[s("li",null,"根据 HTML 解析出 DOM 树"),s("li",null,"根据 CSS 解析生成 CSS 规则树"),s("li",null,"结合 DOM 树和 CSS 规则树，生成渲染树"),s("li",null,"根据渲染树计算每一个节点的信息"),s("li",null,"根据计算好的信息绘制页面")],-1),_=s("p",null,[s("a",{href:"https://segmentfault.com/a/1190000017184701"},"推荐阅读：从 URL 输入到页面展现到底发生什么？")],-1),D=a(`<h3 id="看了我的简历-说使用过-koa2-提出为什么要使用-koa2-怎么不用-express-呢" tabindex="-1">看了我的简历，说使用过 Koa2，提出为什么要使用 Koa2，怎么不用 express 呢？ <a class="header-anchor" href="#看了我的简历-说使用过-koa2-提出为什么要使用-koa2-怎么不用-express-呢" aria-label="Permalink to &quot;看了我的简历，说使用过 Koa2，提出为什么要使用 Koa2，怎么不用 express 呢？&quot;">​</a></h3><p><a href="https://github.com/Chocolate1999/Vue-family-bucket-SSR-Koa2-full-stack-development-from-Meituan">项目地址（传送门）</a></p><h3 id="koa2-中间件你了解过嘛" tabindex="-1">Koa2 中间件你了解过嘛？ <a class="header-anchor" href="#koa2-中间件你了解过嘛" aria-label="Permalink to &quot;Koa2 中间件你了解过嘛？&quot;">​</a></h3><h3 id="项目中有提到用户数据-状态-然后问-你登录拦截有具体了解怎么实现的么" tabindex="-1">项目中有提到用户数据&amp;状态，然后问：你登录拦截有具体了解怎么实现的么？ <a class="header-anchor" href="#项目中有提到用户数据-状态-然后问-你登录拦截有具体了解怎么实现的么" aria-label="Permalink to &quot;项目中有提到用户数据&amp;状态，然后问：你登录拦截有具体了解怎么实现的么？&quot;">​</a></h3><details><summary><b>参考答案</b></summary><p>其实，面试官就是看到了这样一句话：</p><blockquote><p>浏览器发送一个 request 请求，根据 cookie ，服务器通过 passport 与 redis 来验证当前是否是登录状态，返回 username。</p></blockquote><p>主要是项目忘了，我就提了一句用了 passport 中的一个函数，isAu...来着的，<s>单词不会读</s></p></details><p>面试官也是觉得可能再问下去没啥必要了，就说，我们来搞点基础吧~</p><p>主要是三大模块，CSS，JS，算法</p><h3 id="考察-css" tabindex="-1">考察 CSS <a class="header-anchor" href="#考察-css" aria-label="Permalink to &quot;考察 CSS&quot;">​</a></h3><h4 id="css-样式优先级-以及渲染过程" tabindex="-1">css 样式优先级，以及渲染过程 <a class="header-anchor" href="#css-样式优先级-以及渲染过程" aria-label="Permalink to &quot;css 样式优先级，以及渲染过程&quot;">​</a></h4><details><summary><b>参考答案</b></summary><ul><li>内联样式(例如, style=&quot;...&quot;)</li><li>ID 选择器(例如, #example)</li><li>类选择器(例如, .example)、属性选择器(例如, [type=&quot;radio&quot;])、伪类(例如, :hover)</li><li>类型选择器(例如, h1)、伪元素(例如, ::before)</li><li>继承的样式</li></ul><p><a href="https://juejin.im/post/5c7003e8f265da2d864b3e3c">推荐阅读：CSS 技巧篇(五)：理解 CSS 优先级</a></p></details><h4 id="下面样式是怎样渲染的" tabindex="-1">下面样式是怎样渲染的 <a class="header-anchor" href="#下面样式是怎样渲染的" aria-label="Permalink to &quot;下面样式是怎样渲染的&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">.container .inner div{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">: 100px;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">: 100px;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">.container .inner div{</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">: 100px;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">: 100px;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><details><summary><b>参考答案</b></summary><p>我说的是从右到左，这确实是没有问题的，面试官反问，为什么？ 其实道理很简单，如果先渲染 container，怎么找 inner 呢？我说了全部遍历一遍，然后又说了如果是从右到左的话，就会少一些查找。</p></details><h4 id="下面代码-父级元素-container-高度是多少" tabindex="-1">下面代码，父级元素 container 高度是多少？ <a class="header-anchor" href="#下面代码-父级元素-container-高度是多少" aria-label="Permalink to &quot;下面代码，父级元素 container 高度是多少？&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;container&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;inner&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;inner&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">.container {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">: 1px;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">.inner {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">margin</span><span style="color:#E1E4E8;">: 10px;</span></span>
<span class="line"><span style="color:#E1E4E8;">    height</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">: 10px;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;container&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;inner&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;inner&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">.container {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">: 1px;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">.inner {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">margin</span><span style="color:#24292E;">: 10px;</span></span>
<span class="line"><span style="color:#24292E;">    height</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">: 10px;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,15),q=a(`<summary><b>参考答案</b></summary><p>我自己重新写了一个比较好理解的代码，具体如下：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;!</span><span style="color:#79B8FF;">DOCTYPE</span><span style="color:#E1E4E8;"> html</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">charset</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;UTF-8&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;viewport&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">content</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;Document&lt;/</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    .container {</span></span>
<span class="line"><span style="color:#E1E4E8;">        border: 1px;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    .inner1 {</span></span>
<span class="line"><span style="color:#E1E4E8;">        margin: 10px;</span></span>
<span class="line"><span style="color:#E1E4E8;">        height: 10px;</span></span>
<span class="line"><span style="color:#E1E4E8;">        width: 10px;</span></span>
<span class="line"><span style="color:#E1E4E8;">        background: red;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    .inner2 {</span></span>
<span class="line"><span style="color:#E1E4E8;">        margin: 10px;</span></span>
<span class="line"><span style="color:#E1E4E8;">        height: 10px;</span></span>
<span class="line"><span style="color:#E1E4E8;">        width: 10px;</span></span>
<span class="line"><span style="color:#E1E4E8;">        background: blue;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;container&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;inner1&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;inner2&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;!</span><span style="color:#005CC5;">DOCTYPE</span><span style="color:#24292E;"> html</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">charset</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;viewport&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">content</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;Document&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    .container {</span></span>
<span class="line"><span style="color:#24292E;">        border: 1px;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    .inner1 {</span></span>
<span class="line"><span style="color:#24292E;">        margin: 10px;</span></span>
<span class="line"><span style="color:#24292E;">        height: 10px;</span></span>
<span class="line"><span style="color:#24292E;">        width: 10px;</span></span>
<span class="line"><span style="color:#24292E;">        background: red;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    .inner2 {</span></span>
<span class="line"><span style="color:#24292E;">        margin: 10px;</span></span>
<span class="line"><span style="color:#24292E;">        height: 10px;</span></span>
<span class="line"><span style="color:#24292E;">        width: 10px;</span></span>
<span class="line"><span style="color:#24292E;">        background: blue;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;container&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;inner1&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;inner2&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>查看结果，高度为 50px</p>`,4),B=a(`<p>面试官然后又添加了浮动，再问父级元素高度</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;container&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;inner&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;inner&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">.container {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">border</span><span style="color:#E1E4E8;">: 1px;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">.inner {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">float</span><span style="color:#E1E4E8;">: left;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">margin</span><span style="color:#E1E4E8;">: 10px;</span></span>
<span class="line"><span style="color:#E1E4E8;">    height</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">: 10px;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;container&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;inner&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;inner&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">.container {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">border</span><span style="color:#24292E;">: 1px;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">.inner {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">float</span><span style="color:#24292E;">: left;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">margin</span><span style="color:#24292E;">: 10px;</span></span>
<span class="line"><span style="color:#24292E;">    height</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">: 10px;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>查看结果，高度为 0px，此时就出现了一个高度塌陷问题。</p>`,3),k=a(`<p>因为子元素设置了浮动，导致父级元素高度没有算进去。通过以下方式即可清楚浮动，形成一个 BFC，就会加上子集元素的高度。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.container</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">border</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">overflow</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">hidden</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.container</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">border</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">overflow</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">hidden</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>重新打开开发者工具（F12），可以看到父级元素有了高度。</p>`,3),x=a('<h4 id="_100px-直径的圆你怎么画" tabindex="-1">100px 直径的圆你怎么画？ <a class="header-anchor" href="#_100px-直径的圆你怎么画" aria-label="Permalink to &quot;100px 直径的圆你怎么画？&quot;">​</a></h4><details><summary><b>参考答案</b></summary><p><a href="https://juejin.im/post/5d3810fd6fb9a07ed13716d9#heading-6">推荐阅读：趣味 CSS3 效果挑战小汇总</a></p><p><a href="https://juejin.im/post/5c0f6b9df265da614b11d63c">推荐阅读：css 绘制特殊图形</a></p><p><a href="https://www.zhangxinxu.com/study/201511/demo-border-radius.html">推荐：CSS3 border-radius 圆角各个属性值作用演示实例页面</a></p></details><h3 id="考察-js" tabindex="-1">考察 JS <a class="header-anchor" href="#考察-js" aria-label="Permalink to &quot;考察 JS&quot;">​</a></h3><h4 id="下面代码会输出什么-考察变量提升" tabindex="-1">下面代码会输出什么？（考察变量提升） <a class="header-anchor" href="#下面代码会输出什么-考察变量提升" aria-label="Permalink to &quot;下面代码会输出什么？（考察变量提升）&quot;">​</a></h4><p><a href="https://juejin.im/post/5d79b9f351882507ba226047">推荐阅读：JavaScript 变量提升运行机制</a></p><h5 id="第一步" tabindex="-1">第一步 <a class="header-anchor" href="#第一步" aria-label="Permalink to &quot;第一步&quot;">​</a></h5><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(a);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>此时会报错，因为 a 未定义。</p>',8),f=a(`<h5 id="第二步" tabindex="-1">第二步 <a class="header-anchor" href="#第二步" aria-label="Permalink to &quot;第二步&quot;">​</a></h5><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(a);</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>会输出 <code>undefined</code>。</p>`,3),j=a(`<p>上述代码中，变量 <code>a</code> 用 <code>var </code> 命令声明，会发生变量提升，即脚本开始运行时，变量 <code>a</code> 已经存在了，但是没有值，所以会输出 <code>undefined</code> 。</p><h5 id="第三步" tabindex="-1">第三步 <a class="header-anchor" href="#第三步" aria-label="Permalink to &quot;第三步&quot;">​</a></h5><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(a);</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">a</span><span style="color:#E1E4E8;">() {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">a</span><span style="color:#24292E;">() {}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>上述代码会输出一个函数 <code>a</code>。</p>`,4),T=a(`<p>考察知识点：当有多个同名变量声明的时候，函数声明会覆盖其他的声明。如果有多个函数声明，则是由最后的一个函数声明覆盖之前所有的声明。</p><h5 id="第四步" tabindex="-1">第四步 <a class="header-anchor" href="#第四步" aria-label="Permalink to &quot;第四步&quot;">​</a></h5><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(a);</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">a</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">a</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>上述代码结果与知识点与 <code>第三步</code> 一样</p><h5 id="第五步" tabindex="-1">第五步 <a class="header-anchor" href="#第五步" aria-label="Permalink to &quot;第五步&quot;">​</a></h5><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(a);</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">a</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">a</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">a</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">a</span><span style="color:#24292E;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><a href="https://juejin.im/post/5bd465b4f265da0ac07c9b96">推荐阅读：javascript 变量提升详解</a><a href="https://juejin.im/post/5afcf1b96fb9a07abd0ddc43">推荐阅读：深入浅出 JS - 变量提升（函数声明提升）</a></p><p>输出结果：</p>`,8),P=a(`<p>上述代码，首先进行函数声明提升，然后再进行变量提升，此时 <code>a</code>已经是一个变量了，不再是一个函数了，所以就会 <code>throw error</code> 。</p><h4 id="下面代码会输出什么-考察事件循环" tabindex="-1">下面代码会输出什么？（考察事件循环） <a class="header-anchor" href="#下面代码会输出什么-考察事件循环" aria-label="Permalink to &quot;下面代码会输出什么？（考察事件循环）&quot;">​</a></h4><p><a href="https://juejin.im/post/5c60e090f265da2dd8687013">推荐阅读：Javascript 事件循环 event loop</a></p><h5 id="第一步-1" tabindex="-1">第一步 <a class="header-anchor" href="#第一步-1" aria-label="Permalink to &quot;第一步&quot;">​</a></h5><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">setTimeout</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// 输出结果：2 1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// 输出结果：2 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="第二步-1" tabindex="-1">第二步 <a class="header-anchor" href="#第二步-1" aria-label="Permalink to &quot;第二步&quot;">​</a></h5><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">setTimeout</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">resolve</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">val</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(val));</span></span>
<span class="line"><span style="color:#6A737D;">// 输出结果：2 3 4 1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">((</span><span style="color:#E36209;">resolve</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">((</span><span style="color:#E36209;">val</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(val));</span></span>
<span class="line"><span style="color:#6A737D;">// 输出结果：2 3 4 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h5 id="第三步-1" tabindex="-1">第三步 <a class="header-anchor" href="#第三步-1" aria-label="Permalink to &quot;第三步&quot;">​</a></h5><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">document.body.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;click&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">document.body.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;click&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">document.body.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;click&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">document.body.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;click&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>之前那几题答完后，这道题，我毫不犹豫的直接说了 2 4 1 3 ，然后面试官给了我下面这代码提示，啪，直接被拍醒...</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">document.body.</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">document.body.</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>答案是 <code>2 1 4 3</code></p><blockquote><p>谢谢评论区小伙伴提醒，现已修改。</p></blockquote><p>后面搜了相关资料，原来是设计模式中的<strong>发布-订阅模式</strong>，之前就看了面经，知道字节喜欢考这个设计模式，原来真的又考到了，不过题型不一样罢了。</p><p><a href="https://juejin.im/post/5a9108b6f265da4e7527b1a4">推荐阅读：Javascript 设计模式之发布-订阅模式</a></p><p><a href="https://juejin.im/post/5cd7b3ea6fb9a0324a08c933">推荐阅读：前端 JavaScript 的发布-订阅模式</a></p><h3 id="算法题" tabindex="-1">算法题 <a class="header-anchor" href="#算法题" aria-label="Permalink to &quot;算法题&quot;">​</a></h3><h4 id="你了解回文字符串吗-例如-abba-写一下代码吧-不限语言" tabindex="-1">你了解回文字符串吗？例如 abba，写一下代码吧（不限语言） <a class="header-anchor" href="#你了解回文字符串吗-例如-abba-写一下代码吧-不限语言" aria-label="Permalink to &quot;你了解回文字符串吗？例如 abba，写一下代码吧（不限语言）&quot;">​</a></h4><details><summary><b>参考答案</b></summary><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#9ECBFF;">&lt;bits/stdc++.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    string str;</span></span>
<span class="line"><span style="color:#E1E4E8;">    cin</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;">str;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> len</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">str.</span><span style="color:#B392F0;">length</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> mid</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">(len</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    string ans1</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">str.</span><span style="color:#B392F0;">substr</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,mid);</span><span style="color:#6A737D;"> //取前半段字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(len</span><span style="color:#F97583;">&amp;</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) mid</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    string ans2</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">str.</span><span style="color:#B392F0;">substr</span><span style="color:#E1E4E8;">(mid,len</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">mid);</span><span style="color:#6A737D;"> //取后半段字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">reverse</span><span style="color:#E1E4E8;">(ans2.</span><span style="color:#B392F0;">begin</span><span style="color:#E1E4E8;">(),ans2.</span><span style="color:#B392F0;">end</span><span style="color:#E1E4E8;">());</span><span style="color:#6A737D;"> //取反</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(ans1</span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;">ans2) cout</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">endl;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> cout</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">endl;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#032F62;">&lt;bits/stdc++.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    string str;</span></span>
<span class="line"><span style="color:#24292E;">    cin</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;">str;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> len</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">str.</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> mid</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(len</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    string ans1</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">str.</span><span style="color:#6F42C1;">substr</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,mid);</span><span style="color:#6A737D;"> //取前半段字符串</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(len</span><span style="color:#D73A49;">&amp;</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) mid</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    string ans2</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">str.</span><span style="color:#6F42C1;">substr</span><span style="color:#24292E;">(mid,len</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">mid);</span><span style="color:#6A737D;"> //取后半段字符串</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">reverse</span><span style="color:#24292E;">(ans2.</span><span style="color:#6F42C1;">begin</span><span style="color:#24292E;">(),ans2.</span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">());</span><span style="color:#6A737D;"> //取反</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(ans1</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">ans2) cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>由于不限语言，我就用了 <code>C++</code> 编写了，当时忘记对第二个字符串取反了，也<s>没有验证是否可行，就直接上代码了</s> ...</p></details><h4 id="那你可以求出字符串中最长回文子串吗-例如给你-abbac-得到-abba" tabindex="-1">那你可以求出字符串中最长回文子串吗？例如给你 abbac，得到 abba <a class="header-anchor" href="#那你可以求出字符串中最长回文子串吗-例如给你-abbac-得到-abba" aria-label="Permalink to &quot;那你可以求出字符串中最长回文子串吗？例如给你 abbac，得到 abba&quot;">​</a></h4>`,20),S=a(`<summary><b>参考答案</b></summary><p>我当时提到了马拉车算法（<code>Manacher</code>），面试官要我手写一下，还是吃了过去的亏啊，打比赛还遇到过，没有怎么使用就忘了，今天又重新温习一下吧...</p><p>话不多说，先贴参考博客：</p><p><a href="https://www.jianshu.com/p/392172762e55">推荐阅读：马拉车算法（Manacher&#39;s Algorithm）</a></p><p>贴上代码：</p><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#9ECBFF;">&lt;bits/stdc++.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">endl</span><span style="color:#E1E4E8;"> &#39;\\n&#39;</span></span>
<span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> maxn</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">e</span><span style="color:#79B8FF;">3</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> p[maxn];</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    string str;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(cin</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;">str){</span></span>
<span class="line"><span style="color:#E1E4E8;">        string s</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;$&quot;</span><span style="color:#E1E4E8;">;</span><span style="color:#6A737D;">//第一步:预处理，将原字符串转换为新字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;i</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">str.</span><span style="color:#B392F0;">length</span><span style="color:#E1E4E8;">();i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">            s</span><span style="color:#F97583;">+=</span><span style="color:#9ECBFF;">&quot;#&quot;</span><span style="color:#E1E4E8;">,s</span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;">str[i];</span></span>
<span class="line"><span style="color:#E1E4E8;">        s</span><span style="color:#F97583;">+=</span><span style="color:#9ECBFF;">&quot;#@&quot;</span><span style="color:#E1E4E8;">;</span><span style="color:#6A737D;"> //尾部再加上字符@，将偶数长度变为奇数长度</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> n</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">s.</span><span style="color:#B392F0;">length</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> id</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,mx</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span><span style="color:#6A737D;"> //初始化中心位置和最右端位置</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> maxlen</span><span style="color:#F97583;">=-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,idx</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> j</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;j</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;j</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">            p[j]</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">mx</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">j</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">min</span><span style="color:#E1E4E8;">(p[</span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">id</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">j],mx</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">j)</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(s.</span><span style="color:#B392F0;">at</span><span style="color:#E1E4E8;">(j</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">p[j]) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> s.</span><span style="color:#B392F0;">at</span><span style="color:#E1E4E8;">(j</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">p[j]))</span><span style="color:#6A737D;"> //向左右两边拓展</span></span>
<span class="line"><span style="color:#E1E4E8;">                p[j]</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mx</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p[j]</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">j){</span><span style="color:#6A737D;"> //如果超过右边界，进行更新</span></span>
<span class="line"><span style="color:#E1E4E8;">                mx</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">p[j]</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">j;</span></span>
<span class="line"><span style="color:#E1E4E8;">                id</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">j;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(maxlen</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">p[j]</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">){</span><span style="color:#6A737D;"> //更新最大长度和中心索引位置</span></span>
<span class="line"><span style="color:#E1E4E8;">                maxlen</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">p[j]</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                idx</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">j;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> start</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">(idx</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">maxlen)</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span><span style="color:#6A737D;">  //求起始点索引</span></span>
<span class="line"><span style="color:#E1E4E8;">        string ans</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">str.</span><span style="color:#B392F0;">substr</span><span style="color:#E1E4E8;">(start,maxlen);</span><span style="color:#6A737D;"> //字符串截取得到最长回文子串</span></span>
<span class="line"><span style="color:#E1E4E8;">        cout</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">ans</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">endl;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#032F62;">&lt;bits/stdc++.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">endl</span><span style="color:#24292E;"> &#39;\\n&#39;</span></span>
<span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> maxn</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">e</span><span style="color:#005CC5;">3</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> p[maxn];</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    string str;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(cin</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;">str){</span></span>
<span class="line"><span style="color:#24292E;">        string s</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;$&quot;</span><span style="color:#24292E;">;</span><span style="color:#6A737D;">//第一步:预处理，将原字符串转换为新字符串</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;i</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">str.</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">();i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">            s</span><span style="color:#D73A49;">+=</span><span style="color:#032F62;">&quot;#&quot;</span><span style="color:#24292E;">,s</span><span style="color:#D73A49;">+=</span><span style="color:#24292E;">str[i];</span></span>
<span class="line"><span style="color:#24292E;">        s</span><span style="color:#D73A49;">+=</span><span style="color:#032F62;">&quot;#@&quot;</span><span style="color:#24292E;">;</span><span style="color:#6A737D;"> //尾部再加上字符@，将偶数长度变为奇数长度</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> n</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">s.</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> id</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,mx</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span><span style="color:#6A737D;"> //初始化中心位置和最右端位置</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> maxlen</span><span style="color:#D73A49;">=-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,idx</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> j</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;j</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            p[j]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">mx</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">j</span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(p[</span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">id</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">j],mx</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">j)</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(s.</span><span style="color:#6F42C1;">at</span><span style="color:#24292E;">(j</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">p[j]) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> s.</span><span style="color:#6F42C1;">at</span><span style="color:#24292E;">(j</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">p[j]))</span><span style="color:#6A737D;"> //向左右两边拓展</span></span>
<span class="line"><span style="color:#24292E;">                p[j]</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(mx</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p[j]</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">j){</span><span style="color:#6A737D;"> //如果超过右边界，进行更新</span></span>
<span class="line"><span style="color:#24292E;">                mx</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">p[j]</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">j;</span></span>
<span class="line"><span style="color:#24292E;">                id</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">j;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(maxlen</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">p[j]</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">){</span><span style="color:#6A737D;"> //更新最大长度和中心索引位置</span></span>
<span class="line"><span style="color:#24292E;">                maxlen</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">p[j]</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                idx</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">j;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> start</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(idx</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">maxlen)</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span><span style="color:#6A737D;">  //求起始点索引</span></span>
<span class="line"><span style="color:#24292E;">        string ans</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">str.</span><span style="color:#6F42C1;">substr</span><span style="color:#24292E;">(start,maxlen);</span><span style="color:#6A737D;"> //字符串截取得到最长回文子串</span></span>
<span class="line"><span style="color:#24292E;">        cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">ans</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>用两种数据，进行测试，得到如下结果：</p>`,7),w=a('<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>每次面完之后，都要好好总结一下。当我写完这篇文章之后，我发现本次面试难度算很低了，没有考察要你手撕各种设计模式，还有手撕 <code>Promise</code>、手撕 <code>new</code>等等。这些我在面试前还做了准备，但是我发现我又遗忘了...原因很简单，只是第一次接触那些手撕，用的也不是很多，还有更多的知识也是在面试前抢记的。看的特别广而杂，反而知识没有连通性，记着记着自然遗忘了。</p><p>其次，对于字节跳动，经历过这一次面试后，我也逐渐发现面试都差不多，面试官都挺好的，期间还会暗示你（当然你懂他意思的话...），面之前，一看是头条我一下觉得没啥自信了，都说头条很在意算法，但本次考察的算法好像没有 <code>acm</code> 那样的难度，而是自己把自己给吓住了，信心自然没了...</p><p>过了好几天了，也没有收到感谢信，当然，也没有收到下次面试通知，估计是 &quot;入库&quot; 了吧，在此，写下今后的安排：</p><ul><li>无需惧怕算法题，难度真的没有 <code>acm</code> 那个高度</li><li>将知识重新捡起来，不要在要面试的时候，才临时抢记知识</li><li>安静地努力，每篇文章写完后就要消化，不要没弄懂就发布</li><li>文章不在于多，而在于精，将每篇文章都要认真书写，让读者都能一读即懂</li></ul><p>发现每次只有把知识点讲出来才会印象深刻，今后的日子也要这样做！</p><p>最后，本次面经书写完毕，算是一次不错的体验了，还要继续加油~</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">学如逆水行舟，不进则退</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">学如逆水行舟，不进则退</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>',9);function I(V,R,N,J,L,$){const o=t,l=y,e=r,c=E;return d(),b("div",null,[h,n(o,{readTime:"11",words:"3.2k"}),F,m,g,n(l,{publicId:"interview/bytedance-1_d0dz6v",alt:"bytedance"}),C,s("details",null,[v,p(" 浏览器解析渲染页面分为一下五个步骤： "),A,n(l,{publicId:"interview/bytedance-2_loollr",alt:"bytedance"}),_]),D,s("details",null,[q,n(l,{publicId:"interview/bytedance-3_pbtha9",alt:"bytedance"}),B,n(l,{publicId:"interview/bytedance-4_v3wwjc",alt:"bytedance"}),k,n(l,{publicId:"interview/bytedance-5_ikkgr1",alt:"bytedance"})]),x,n(l,{publicId:"interview/bytedance-6_lqisot",alt:"bytedance-6_lqisot"}),f,n(l,{publicId:"interview/bytedance-7_dtm4s6",alt:"bytedance-7"}),j,n(l,{publicId:"interview/bytedance-8_vtmkp9",alt:"bytedance"}),T,n(l,{publicId:"interview/bytedance-9_uxoib5",alt:"bytedance"}),P,s("details",null,[S,n(l,{publicId:"interview/bytedance-10_dwaxjr",alt:"bytedance-10"})]),w,n(e),n(c)])}const z=i(u,[["render",I]]);export{O as __pageData,z as default};
