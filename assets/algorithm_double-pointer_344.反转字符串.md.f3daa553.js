import{_ as o,a as e,b as t}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.61fdc39d.js";import{_ as r,o as c,c as y,H as s,k as a,a as E,Q as i}from"./chunks/framework.926cbeec.js";import"./chunks/commonjsHelpers.725317a4.js";const B=JSON.parse('{"title":"LeetCode 344. 反转字符串","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/double-pointer/344.反转字符串.md","filePath":"algorithm/double-pointer/344.反转字符串.md","lastUpdated":1696923443000}'),u={name:"algorithm/double-pointer/344.反转字符串.md"},d=a("h1",{id:"leetcode-344-反转字符串",tabindex:"-1"},[E("LeetCode 344. 反转字符串 "),a("a",{class:"header-anchor",href:"#leetcode-344-反转字符串","aria-label":'Permalink to "LeetCode 344. 反转字符串"'},"​")],-1),F=i(`<h2 id="题目描述" tabindex="-1">题目描述 <a class="header-anchor" href="#题目描述" aria-label="Permalink to &quot;题目描述&quot;">​</a></h2><p>编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 <code>char[]</code> 的形式给出。</p><p>不要给另外的数组分配额外的空间，你必须<strong>原地修改输入数组</strong>、使用 O(1) 的额外空间解决这一问题。</p><p>你可以假设数组中的所有字符都是 <code>ASCII</code> 码表中的可打印字符。</p><p>示例 1：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">输入：[</span><span style="color:#9ECBFF;">&quot;h&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;e&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;l&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;l&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;o&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">输出：[</span><span style="color:#9ECBFF;">&quot;o&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;l&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;l&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;e&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;h&quot;</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">输入：[</span><span style="color:#032F62;">&quot;h&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;e&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;l&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;l&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;o&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">输出：[</span><span style="color:#032F62;">&quot;o&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;l&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;l&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;e&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;h&quot;</span><span style="color:#24292E;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>示例 2：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">输入：[</span><span style="color:#9ECBFF;">&quot;H&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;n&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;n&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;h&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">输出：[</span><span style="color:#9ECBFF;">&quot;h&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;n&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;n&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;H&quot;</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">输入：[</span><span style="color:#032F62;">&quot;H&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;n&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;n&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;h&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">输出：[</span><span style="color:#032F62;">&quot;h&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;n&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;n&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;H&quot;</span><span style="color:#24292E;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>来源：力扣（LeetCode） 链接：<a href="https://leetcode-cn.com/problems/reverse-string" target="_blank" rel="noreferrer">https://leetcode-cn.com/problems/reverse-string</a> 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解题思路" tabindex="-1">解题思路 <a class="header-anchor" href="#解题思路" aria-label="Permalink to &quot;解题思路&quot;">​</a></h2><p>方法一：利用 JS 原生 api</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{character[]}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">s</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span><span style="color:#6A737D;"> Do not return anything, modify s in-place instead.</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reverseString</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">s</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> s.</span><span style="color:#B392F0;">reverse</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{character[]}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">s</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{void}</span><span style="color:#6A737D;"> Do not return anything, modify s in-place instead.</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reverseString</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">s</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> s.</span><span style="color:#6F42C1;">reverse</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>方法二：双指针，头尾交换</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{character[]}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">s</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{void}</span><span style="color:#6A737D;"> Do not return anything, modify s in-place instead.</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reverseString</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">s</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    j </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> s.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> j) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    [s[i], s[j]] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [s[j], s[i]]; </span><span style="color:#6A737D;">// 双指针，交换</span></span>
<span class="line"><span style="color:#E1E4E8;">    i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">, j</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> s;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{character[]}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">s</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{void}</span><span style="color:#6A737D;"> Do not return anything, modify s in-place instead.</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reverseString</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">s</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> j) {</span></span>
<span class="line"><span style="color:#24292E;">    [s[i], s[j]] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [s[j], s[i]]; </span><span style="color:#6A737D;">// 双指针，交换</span></span>
<span class="line"><span style="color:#24292E;">    i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">, j</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> s;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">学如逆水行舟，不进则退</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">学如逆水行舟，不进则退</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>`,16);function b(q,h,m,v,A,D){const n=o,p=e,l=t;return c(),y("div",null,[d,s(n,{readTime:"1",words:"322"}),F,s(p),s(l)])}const k=r(u,[["render",b]]);export{B as __pageData,k as default};
