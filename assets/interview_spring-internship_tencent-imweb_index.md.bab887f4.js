import{_ as t,a as c,b as r}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.61fdc39d.js";import{_ as i}from"./chunks/CloudinaryImg.vue_vue_type_script_setup_true_lang.87fcf701.js";import{_ as E,o as y,c as h,H as s,k as a,a as d,Q as n}from"./chunks/framework.926cbeec.js";import"./chunks/commonjsHelpers.725317a4.js";const A=JSON.parse('{"title":"【腾讯】记录腾讯一面（IMWeb 团队）","description":"","frontmatter":{},"headers":[],"relativePath":"interview/spring-internship/tencent-imweb/index.md","filePath":"interview/spring-internship/tencent-imweb/index.md","lastUpdated":1696923443000}'),u={name:"interview/spring-internship/tencent-imweb/index.md"},b=a("h1",{id:"【腾讯】记录腾讯一面-imweb-团队",tabindex:"-1"},[d("【腾讯】记录腾讯一面（IMWeb 团队） "),a("a",{class:"header-anchor",href:"#【腾讯】记录腾讯一面-imweb-团队","aria-label":'Permalink to "【腾讯】记录腾讯一面（IMWeb 团队）"'},"​")],-1),m=n('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>文章编写于 2020 年 05 月 26 日 —— 第一次面试给我紧张的...</p></div><h2 id="写在开头" tabindex="-1">写在开头 <a class="header-anchor" href="#写在开头" aria-label="Permalink to &quot;写在开头&quot;">​</a></h2><p>面试总时长大约 100 分钟，下午 3 点面试，结束接近 5 点样子。总体感觉就是体会到了差距，但也算是一次历练吧，大场面我都经历过了，也无惧小场面了。下面就将面经分享一下，主要是分享一下题目把，答案网上应该都能找到。</p><p>PS：<code>题目肯定是不唯一的，写这篇博客的原因：</code></p><ul><li>记录总结这次面试</li><li>分享一下面经</li><li>体会差距，努力学习</li></ul><p>注：不代表这套题就是你会被问到的，可以学习一下面试模式</p><p>此次面试官：IMWeb 团队 前端架构师</p><h2 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文" aria-label="Permalink to &quot;正文&quot;">​</a></h2><h3 id="_1、自我介绍" tabindex="-1">1、自我介绍 <a class="header-anchor" href="#_1、自我介绍" aria-label="Permalink to &quot;1、自我介绍&quot;">​</a></h3><p>开场多半都是这样</p><h3 id="_2、询问你在大学学了哪些课程-你觉得你学得最好的是哪一门" tabindex="-1">2、询问你在大学学了哪些课程，你觉得你学得最好的是哪一门？ <a class="header-anchor" href="#_2、询问你在大学学了哪些课程-你觉得你学得最好的是哪一门" aria-label="Permalink to &quot;2、询问你在大学学了哪些课程，你觉得你学得最好的是哪一门？&quot;">​</a></h3><p>这里的话，接下来的话题就会围绕你觉得学的最好的课程来展开</p><h3 id="_3、先用-js-手写一个冒泡排序" tabindex="-1">3、先用 js 手写一个冒泡排序 <a class="header-anchor" href="#_3、先用-js-手写一个冒泡排序" aria-label="Permalink to &quot;3、先用 js 手写一个冒泡排序&quot;">​</a></h3><p>这期间还问了时间复杂度和空间复杂度，空间复杂度与什么因素有关</p><h3 id="_4、你知道打开-https-www-qq-com经历了什么吗" tabindex="-1">4、你知道打开 https:www.qq.com经历了什么吗？ <a class="header-anchor" href="#_4、你知道打开-https-www-qq-com经历了什么吗" aria-label="Permalink to &quot;4、你知道打开 https:www.qq.com经历了什么吗？&quot;">​</a></h3><p>这个就是关于输入网址到显示页面的步骤</p><h3 id="_5、js-基本数据类型" tabindex="-1">5、js 基本数据类型 <a class="header-anchor" href="#_5、js-基本数据类型" aria-label="Permalink to &quot;5、js 基本数据类型&quot;">​</a></h3><p>之前答的不是很好，面试官就回到了简单一点的题</p><h3 id="_6、vue-生命周期你有了解过吗-你用到过哪些" tabindex="-1">6、Vue 生命周期你有了解过吗？你用到过哪些？ <a class="header-anchor" href="#_6、vue-生命周期你有了解过吗-你用到过哪些" aria-label="Permalink to &quot;6、Vue 生命周期你有了解过吗？你用到过哪些？&quot;">​</a></h3><p>beforeCreate 、created 等等</p><h3 id="_7、你知道-cookie-吗-请描述一下-cookies-sessionstorage-和-localstorage-的区别" tabindex="-1">7、你知道 cookie 吗？请描述一下 cookies，sessionStorage 和 localStorage 的区别？ <a class="header-anchor" href="#_7、你知道-cookie-吗-请描述一下-cookies-sessionstorage-和-localstorage-的区别" aria-label="Permalink to &quot;7、你知道 cookie 吗？请描述一下 cookies，sessionStorage 和 localStorage 的区别？&quot;">​</a></h3><p>这里也问了 cookies 里面重要属性有哪些，有什么用</p><h3 id="_8、你了解-seo-吗-知道怎么做吗" tabindex="-1">8、你了解 SEO 吗？知道怎么做吗？ <a class="header-anchor" href="#_8、你了解-seo-吗-知道怎么做吗" aria-label="Permalink to &quot;8、你了解 SEO 吗？知道怎么做吗？&quot;">​</a></h3><p>这里我就答了 html5 一些，以及搭建 hexo 博客用的优化，还提及到了 SEO 有什么用</p><h3 id="_9、谈谈你对-this-的理解" tabindex="-1">9、谈谈你对 this 的理解 <a class="header-anchor" href="#_9、谈谈你对-this-的理解" aria-label="Permalink to &quot;9、谈谈你对 this 的理解&quot;">​</a></h3><p>因为提及到了 apply 和 call，面试官就反问了 apply 和 call 的知识</p><h3 id="_10、你了解跨域吗" tabindex="-1">10、你了解跨域吗？ <a class="header-anchor" href="#_10、你了解跨域吗" aria-label="Permalink to &quot;10、你了解跨域吗？&quot;">​</a></h3><p>我在谈及的时候，提及到了前后端分离模式，于是下一题...</p><h3 id="_11、说说你对前后端分离的理解" tabindex="-1">11、说说你对前后端分离的理解 <a class="header-anchor" href="#_11、说说你对前后端分离的理解" aria-label="Permalink to &quot;11、说说你对前后端分离的理解&quot;">​</a></h3><p>我就从 JSONP 时代讲到了 nginx 反向代理，也从原本不需要考虑跨域问题谈到现在比较主流的前后端分离模式</p><h3 id="_12、你对浏览器的理解-本地打开浏览器经历了什么" tabindex="-1">12、你对浏览器的理解，本地打开浏览器经历了什么？ <a class="header-anchor" href="#_12、你对浏览器的理解-本地打开浏览器经历了什么" aria-label="Permalink to &quot;12、你对浏览器的理解，本地打开浏览器经历了什么？&quot;">​</a></h3><p>这个当时有点懵...</p><h3 id="_13、谈谈你所了解的前端性能优化" tabindex="-1">13、谈谈你所了解的前端性能优化？ <a class="header-anchor" href="#_13、谈谈你所了解的前端性能优化" aria-label="Permalink to &quot;13、谈谈你所了解的前端性能优化？&quot;">​</a></h3><p>代码压缩，SEO、缓存等等</p><h3 id="_14、你知道-gulp-吗" tabindex="-1">14、你知道 gulp 吗？ <a class="header-anchor" href="#_14、你知道-gulp-吗" aria-label="Permalink to &quot;14、你知道 gulp 吗？&quot;">​</a></h3><p>流...</p><h3 id="_15、你用过-git-吗-常见哪些指令-你知道回退是什么指令吗" tabindex="-1">15、你用过 git 吗？常见哪些指令？你知道回退是什么指令吗？ <a class="header-anchor" href="#_15、你用过-git-吗-常见哪些指令-你知道回退是什么指令吗" aria-label="Permalink to &quot;15、你用过 git 吗？常见哪些指令？你知道回退是什么指令吗？&quot;">​</a></h3><h3 id="_16、你了解-react-吗" tabindex="-1">16、你了解 React 吗？ <a class="header-anchor" href="#_16、你了解-react-吗" aria-label="Permalink to &quot;16、你了解 React 吗？&quot;">​</a></h3><p>因为不是很了解，这里我就谈及了 mvvm 和 mvc 的区别，也说明了为啥选择学习 Vue，作为学生目前了解不是很深入</p><h3 id="_17、你知道怎么不传-cookied-吗-你了解过-http-only-吗" tabindex="-1">17、你知道怎么不传 cookied 吗？你了解过 http:only 吗？ <a class="header-anchor" href="#_17、你知道怎么不传-cookied-吗-你了解过-http-only-吗" aria-label="Permalink to &quot;17、你知道怎么不传 cookied 吗？你了解过 http:only 吗？&quot;">​</a></h3><p>这个我就有点熟悉，但不记得了</p><h3 id="_18、你了解-webpack-吗" tabindex="-1">18、你了解 Webpack 吗？ <a class="header-anchor" href="#_18、你了解-webpack-吗" aria-label="Permalink to &quot;18、你了解 Webpack 吗？&quot;">​</a></h3><p>打包方面</p><h3 id="_19、对于之前打开本地浏览器那一块-你了解过-dom-树吗" tabindex="-1">19、对于之前打开本地浏览器那一块，你了解过 dom 树吗？ <a class="header-anchor" href="#_19、对于之前打开本地浏览器那一块-你了解过-dom-树吗" aria-label="Permalink to &quot;19、对于之前打开本地浏览器那一块，你了解过 dom 树吗？&quot;">​</a></h3><p>好像他也想问 AST 语法树方面，但我也不记得了</p><h3 id="_20、你了解-cdn-吗-在哪里你用过" tabindex="-1">20、你了解 CDN 吗？在哪里你用过 <a class="header-anchor" href="#_20、你了解-cdn-吗-在哪里你用过" aria-label="Permalink to &quot;20、你了解 CDN 吗？在哪里你用过&quot;">​</a></h3><h3 id="_21、说说你对原型链的理解" tabindex="-1">21、说说你对原型链的理解？ <a class="header-anchor" href="#_21、说说你对原型链的理解" aria-label="Permalink to &quot;21、说说你对原型链的理解？&quot;">​</a></h3><h3 id="_22、谈谈你对响应式原理的理解" tabindex="-1">22、谈谈你对响应式原理的理解 <a class="header-anchor" href="#_22、谈谈你对响应式原理的理解" aria-label="Permalink to &quot;22、谈谈你对响应式原理的理解&quot;">​</a></h3><p>我提及到了 Vue2.0 和 Vue3.0 区别 以及 proxy 还能做些什么</p><h3 id="_23、你了解闭包吗" tabindex="-1">23、你了解闭包吗？ <a class="header-anchor" href="#_23、你了解闭包吗" aria-label="Permalink to &quot;23、你了解闭包吗？&quot;">​</a></h3><h3 id="_24、leetcode-电话号码的字母组合" tabindex="-1">24、leetcode 电话号码的字母组合 <a class="header-anchor" href="#_24、leetcode-电话号码的字母组合" aria-label="Permalink to &quot;24、leetcode 电话号码的字母组合&quot;">​</a></h3><p>题目</p><p>给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。 给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。</p>',53),_=n(`<p>示例: 输入：&quot;23&quot; 输出：[&quot;ad&quot;, &quot;ae&quot;, &quot;af&quot;, &quot;bd&quot;, &quot;be&quot;, &quot;bf&quot;, &quot;cd&quot;, &quot;ce&quot;, &quot;cf&quot;].</p><h3 id="_25、最后-出了-4-到题" tabindex="-1">25、最后，出了 4 到题 <a class="header-anchor" href="#_25、最后-出了-4-到题" aria-label="Permalink to &quot;25、最后，出了 4 到题&quot;">​</a></h3><p>① 异步、事件循环方面，具体题不急得了，但你能把下面这道题做出来，基本上没问题</p><p><a href="https://chocolate.blog.csdn.net/article/details/104907304">原题地址及解析</a></p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;!</span><span style="color:#79B8FF;">DOCTYPE</span><span style="color:#E1E4E8;"> html</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;en&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">charset</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;UTF-8&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;挑战js面试题&lt;/</span><span style="color:#85E89D;">title</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">head</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        async function async1(){</span></span>
<span class="line"><span style="color:#E1E4E8;">            console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;async1 start&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">async2</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;async1 end&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        async function async2(){</span></span>
<span class="line"><span style="color:#E1E4E8;">            console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;async2&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.log(&#39;script start&#39;);</span></span>
<span class="line"><span style="color:#E1E4E8;">        setTimeout(function(){</span></span>
<span class="line"><span style="color:#E1E4E8;">            console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;setTimeout&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        },0)</span></span>
<span class="line"><span style="color:#E1E4E8;">        async1();</span></span>
<span class="line"><span style="color:#E1E4E8;">        new Promise(function (resolve){</span></span>
<span class="line"><span style="color:#E1E4E8;">            console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;promise1&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }).then(function(){</span></span>
<span class="line"><span style="color:#E1E4E8;">            console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;promise2&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.log(&#39;script end&#39;);</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;!</span><span style="color:#005CC5;">DOCTYPE</span><span style="color:#24292E;"> html</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">meta</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">charset</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;UTF-8&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;挑战js面试题&lt;/</span><span style="color:#22863A;">title</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">head</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        async function async1(){</span></span>
<span class="line"><span style="color:#24292E;">            console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;async1 start&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">async2</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;async1 end&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        async function async2(){</span></span>
<span class="line"><span style="color:#24292E;">            console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;async2&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        console.log(&#39;script start&#39;);</span></span>
<span class="line"><span style="color:#24292E;">        setTimeout(function(){</span></span>
<span class="line"><span style="color:#24292E;">            console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;setTimeout&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        },0)</span></span>
<span class="line"><span style="color:#24292E;">        async1();</span></span>
<span class="line"><span style="color:#24292E;">        new Promise(function (resolve){</span></span>
<span class="line"><span style="color:#24292E;">            console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;promise1&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }).then(function(){</span></span>
<span class="line"><span style="color:#24292E;">            console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;promise2&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">        console.log(&#39;script end&#39;);</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>② 你如何将 arguments 参数改变为数组</p><p>③ box-sizing 中 content 和 border 的区别</p><p>讲解各种盒模型：标准盒模型、IE（怪异）盒模型、flex、分列布局</p><p>④ 请你用正则表达式来解析腾讯 qq 或者腾讯其它网页的域名</p><h2 id="结尾" tabindex="-1">结尾 <a class="header-anchor" href="#结尾" aria-label="Permalink to &quot;结尾&quot;">​</a></h2><p>好了，距离上次面试也过了两天了，我才打算写一份面经，有些题目可能不太记得了，如果后续学习的时候想到了，我会在评论区进行补充，100 多分钟，想不到还问了这么多题...而且有些题目我还进行了深入探讨，比如对闭包，对 v8 引擎，Vue 中响应式原理那一块探索设计模式。</p><p>尽管凉了，但也是一次不错的体验吧，<code>跌倒了一次，爬起来，继续走下去</code>...</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">学如逆水行舟，不进则退</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">学如逆水行舟，不进则退</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>`,14);function q(g,k,f,F,x,P){const l=t,e=i,o=c,p=r;return y(),h("div",null,[b,s(l,{readTime:"4",words:"1.3k"}),m,s(e,{publicId:"interview/phone_wnvkx3",alt:"phone"}),_,s(o),s(p)])}const D=E(u,[["render",q]]);export{A as __pageData,D as default};
