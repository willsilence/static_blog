import{_ as i,a as u,b as y}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.61fdc39d.js";import{_ as E}from"./chunks/CustomLink.cd661532.js";import{_ as d,C as h,o as m,c as b,H as n,k as s,a,w as p,Q as l}from"./chunks/framework.926cbeec.js";import"./chunks/commonjsHelpers.725317a4.js";const Y=JSON.parse('{"title":"React 模拟面试题 2023 版","description":"","frontmatter":{"author":"HearLing"},"headers":[],"relativePath":"interview/react-summary/index.md","filePath":"interview/react-summary/index.md","lastUpdated":1696923443000}'),_={name:"interview/react-summary/index.md"},g=s("h1",{id:"react-模拟面试题-2023-版",tabindex:"-1"},[a("React 模拟面试题 2023 版 "),s("a",{class:"header-anchor",href:"#react-模拟面试题-2023-版","aria-label":'Permalink to "React 模拟面试题 2023 版"'},"​")],-1),F=s("blockquote",null,[s("p",null,"之前总结了 Vue 相关的面试题，看的人没想到挺多的，但是也为我带来了不小的争议。虽然我有明确写出答案《仅供参考》但是还是有同学照抄呀，这么说呢就是你完全没有思考直接跟面试官对答，就算你没说错但也经不起细问的呀。")],-1),R=s("p",null,"废话不多说，俺还是比较关心大伙的春秋招面试准备得咋样了，面试的 React 复习得怎么样了呢？",-1),f=s("p",null,"如果你感觉在 React 这方面还比较薄弱的话，不如来做一做这套模拟面试吧，看看大伙能不能打个满分，祝你顺利~",-1),k=s("p",null,[a("🌸🌸🌸🌸🌸"),s("strong",null,"答案仅供参考"),a("🌸🌸🌸🌸🌸")],-1),x=s("code",null,"552",-1),D=l("",3),S=s("strong",null,"答案仅供参考",-1),C=s("strong",null,"答案会详略得当，不会面面俱到",-1),q=l("",24),A=s("summary",null,[s("b",null,"参考答案")],-1),v=s("ul",null,[s("li",null,"Scheduler（调度器）—— 调度任务的优先级，高优任务优先进入 Reconciler"),s("li",null,"Reconciler（协调器）—— 负责找出变化的组件"),s("li",null,"Renderer（渲染器）—— 负责将变化的组件渲染到页面上")],-1),P=l("",7),B=l("",18),T=l("",11),V=s("ul",null,[s("li",null,[s("p",null,"React 主要使用 diff 队列保存需要更新哪些 DOM，得到 patch 树，再统一操作批量更新 DOM。")]),s("li",null,[s("p",null,"Vue Diff 使用双向链表，边对比，边更新 DOM。")])],-1),M=s("blockquote",null,[s("p",null,"注意两者处于不同赛道，不存在谁取代谁这一说法，别踩一捧一。")],-1),O=s("ul",null,[s("li",null,[s("p",null,"React 只关注底层，上层应用解决方案交给社区，造就了 React 社区繁荣，同时 React 团队有更多时间专注底层。未来 React 的发展依然会在 函数式编程 这个核心思想的下进行升级。")]),s("li",null,[s("p",null,"Vue 提供了一揽子全家桶解决方案，比如 Vuex、Vue-Router、Vue-CLI、Vutur 工具等。减少选择困难症，只需认准官方给出的解决方案即可。Vue 依然会定位简单易上手（渐进式开发），依然是考虑通过依赖收集来实现数据可变。")])],-1),w=l("",6),U=l("",10),N=s("ul",null,[s("li",null,"Store，Store 存放应用程序的状态，并且有帮助函数来访问这些状态。Store 可以用来聆听变化和发送 action。Store 只有一个。"),s("li",null,"Reducers，数据的状态是通过 reducer 函数来改变的。"),s("li",null,"Actions，Actions 代表的是一个对象。有两部分，一个是 action 本身，另一个就是它的 payload。简单说就是对哪些数据进行哪些操作。"),s("li",null,"React-Redux，Redux 本身和 React 没有关系，只是数据处理中心，是 React-Redux 让他们联系在一起。React-rRedux 提供两个方法：connect 和 Provider。")],-1),I=l("",26);function J(H,X,j,L,W,$){const t=i,e=E,o=h("font"),r=u,c=y;return m(),b("div",null,[g,n(t,{readTime:"24",words:"7.5k"}),F,R,f,k,s("p",null,[a("欢迎访问"),n(e,{title:"GitHub 仓库",href:"https://github.com/Chocolate1999/Front-end-learning-to-organize-notes/issues"}),a("，目前已经有 "),x,a(" 道大厂真题了，涵盖各类前端的真题。也可以访问我的 "),n(e,{title:"面试专栏",href:"/interview/"}),a(" ，我的文章会第一时间更新在这。")]),D,s("p",null,[a("3、"),n(o,{color:"red"},{default:p(()=>[S]),_:1}),a(),C,a("。我更偏向于告诉你，这个题第一层你可以怎么展开，第二层在你展开的这几点各自下面的重要点又是什么。至于你要不要扩充各个层级的点，以及要不要更深入增加层级，就是需要自己去思考和研究的了。")]),q,s("details",null,[A,a(" React16 开始的fiber架构可以分为三层，相较于React15，新增了Scheduler（调度器），Reconciler从递归处理虚拟DOM变为可中断的循环过程，： "),v,s("p",null,[a("官方也推荐了 "),n(e,{title:"答案 1",href:"https://github.com/acdlite/react-fiber-architecture"}),a(" 和 "),n(e,{title:"答案 2",href:"https://medium.com/react-in-depth/inside-fiber-in-depth-overview-of-the-new-reconciliation-algorithm-in-react-e1c04700ef6e"}),a(" ，我这里基于此题，简单描述一下，什么是 Fiber ，以及解决了什么问题，怎么解决的（进阶）。")]),P]),B,s("details",null,[T,s("p",null,[a("6、"),n(o,{color:"gray"},{default:p(()=>[a("diff 算法实现")]),_:1})]),V,s("p",null,[a("7、"),n(o,{color:"gray"},{default:p(()=>[a("社区和未来发展")]),_:1})]),M,O]),w,s("details",null,[U,n(o,{color:"gray"},{default:p(()=>[a("另外一些需要知道的")]),_:1}),N]),I,n(r),n(c)])}const Z=d(_,[["render",J]]);export{Y as __pageData,Z as default};
