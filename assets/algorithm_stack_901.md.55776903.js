import{_ as c,a as r,b as t}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.61fdc39d.js";import{_ as E}from"./chunks/Badge.5930169f.js";import{_ as y,o as i,c as F,k as a,a as n,H as s,Q as b}from"./chunks/framework.926cbeec.js";import"./chunks/commonjsHelpers.725317a4.js";const q=JSON.parse('{"title":"LeetCode 901. 股票价格跨度","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/stack/901.md","filePath":"algorithm/stack/901.md","lastUpdated":1696923443000}'),u={name:"algorithm/stack/901.md"},C={id:"leetcode-901-股票价格跨度",tabindex:"-1"},d=a("a",{class:"header-anchor",href:"#leetcode-901-股票价格跨度","aria-label":'Permalink to "LeetCode 901. 股票价格跨度 <Badge type="warning" text="中等" />"'},"​",-1),m=b(`<h2 id="题目描述" tabindex="-1">题目描述 <a class="header-anchor" href="#题目描述" aria-label="Permalink to &quot;题目描述&quot;">​</a></h2><p>编写一个 <code>StockSpanner</code> 类，它收集某些股票的每日报价，并返回该股票当日价格的跨度。</p><p>今天股票价格的跨度被定义为股票价格小于或等于今天价格的最大连续日数（从今天开始往回数，包括今天）。</p><p>例如，如果未来 7 天股票的价格是<code> [100, 80, 60, 70, 60, 75, 85]</code>，那么股票跨度将是<code> [1, 1, 1, 2, 1, 4, 6]</code>。</p><p>示例：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">输入：[</span><span style="color:#9ECBFF;">&quot;StockSpanner&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;next&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;next&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;next&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;next&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;next&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;next&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;next&quot;</span><span style="color:#E1E4E8;">], [[],[</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">],[</span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;">],[</span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">],[</span><span style="color:#79B8FF;">70</span><span style="color:#E1E4E8;">],[</span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">],[</span><span style="color:#79B8FF;">75</span><span style="color:#E1E4E8;">],[</span><span style="color:#79B8FF;">85</span><span style="color:#E1E4E8;">]]</span></span>
<span class="line"><span style="color:#E1E4E8;">输出：[</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">解释：</span></span>
<span class="line"><span style="color:#E1E4E8;">首先，初始化 </span><span style="color:#79B8FF;">S</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StockSpanner</span><span style="color:#E1E4E8;">()，然后：</span></span>
<span class="line"><span style="color:#79B8FF;">S</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">) 被调用并返回 </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">，</span></span>
<span class="line"><span style="color:#79B8FF;">S</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;">) 被调用并返回 </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">，</span></span>
<span class="line"><span style="color:#79B8FF;">S</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">) 被调用并返回 </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">，</span></span>
<span class="line"><span style="color:#79B8FF;">S</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">70</span><span style="color:#E1E4E8;">) 被调用并返回 </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">，</span></span>
<span class="line"><span style="color:#79B8FF;">S</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">) 被调用并返回 </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">，</span></span>
<span class="line"><span style="color:#79B8FF;">S</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">75</span><span style="color:#E1E4E8;">) 被调用并返回 </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">，</span></span>
<span class="line"><span style="color:#79B8FF;">S</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">85</span><span style="color:#E1E4E8;">) 被调用并返回 </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">输入：[</span><span style="color:#032F62;">&quot;StockSpanner&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;next&quot;</span><span style="color:#24292E;">], [[],[</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">80</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">70</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">75</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">85</span><span style="color:#24292E;">]]</span></span>
<span class="line"><span style="color:#24292E;">输出：[</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">解释：</span></span>
<span class="line"><span style="color:#24292E;">首先，初始化 </span><span style="color:#005CC5;">S</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;">()，然后：</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">，</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">80</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">，</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">，</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">70</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">，</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">，</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">75</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">，</span></span>
<span class="line"><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">85</span><span style="color:#24292E;">) 被调用并返回 </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">注意</span><span style="color:#E1E4E8;"> (例如) </span><span style="color:#79B8FF;">S</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">75</span><span style="color:#E1E4E8;">) 返回 </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">，因为截至今天的最后 </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> 个价格</span></span>
<span class="line"><span style="color:#E1E4E8;">(包括今天的价格 </span><span style="color:#79B8FF;">75</span><span style="color:#E1E4E8;">) 小于或等于今天的价格。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">注意</span><span style="color:#24292E;"> (例如) </span><span style="color:#005CC5;">S</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">75</span><span style="color:#24292E;">) 返回 </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">，因为截至今天的最后 </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> 个价格</span></span>
<span class="line"><span style="color:#24292E;">(包括今天的价格 </span><span style="color:#005CC5;">75</span><span style="color:#24292E;">) 小于或等于今天的价格。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>提示：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">调用 StockSpanner.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">(int price) 时，将有 </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> price </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">。</span></span>
<span class="line"><span style="color:#E1E4E8;">每个测试用例最多可以调用  </span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;"> 次 StockSpanner.next。</span></span>
<span class="line"><span style="color:#E1E4E8;">在所有测试用例中，最多调用 </span><span style="color:#79B8FF;">150000</span><span style="color:#E1E4E8;"> 次 StockSpanner.next。</span></span>
<span class="line"><span style="color:#E1E4E8;">此问题的总时间限制减少了 </span><span style="color:#79B8FF;">50</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">调用 StockSpanner.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(int price) 时，将有 </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> price </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">。</span></span>
<span class="line"><span style="color:#24292E;">每个测试用例最多可以调用  </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;"> 次 StockSpanner.next。</span></span>
<span class="line"><span style="color:#24292E;">在所有测试用例中，最多调用 </span><span style="color:#005CC5;">150000</span><span style="color:#24292E;"> 次 StockSpanner.next。</span></span>
<span class="line"><span style="color:#24292E;">此问题的总时间限制减少了 </span><span style="color:#005CC5;">50</span><span style="color:#D73A49;">%</span><span style="color:#24292E;">。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="解题思路" tabindex="-1">解题思路 <a class="header-anchor" href="#解题思路" aria-label="Permalink to &quot;解题思路&quot;">​</a></h2><p>正如题意，我们要求当前元素之前，比自己小（可以相等）的元素个数，并且元素个数包括本身，那么我们最后的结果应该还要加 1.</p><p>于是按题意，我们采用跨度法，举个例子，对于例子 6，1，2，3，4，9，从后往前逆推一下，当我们新插入 9 的时候，如果发现前一位的 4 比 9 小，那么是否说明比 9 小的数量就等于比 4 小的数量加 1？然而这是错的，因为首位的 6 比 9 小，却比 4 大，因此截止数字的 4 时候，比 4 小的数量中并不包含 6 与 9 的对比。</p><p>因此，我们还要跳到 6 的位置再去计算小于等于自己的元素。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-TLYtq" id="tab-uaRAHNO" checked="checked"><label for="tab-uaRAHNO">javascript</label><input type="radio" name="group-TLYtq" id="tab-oCucVIc"><label for="tab-oCucVIc">cpp</label><input type="radio" name="group-TLYtq" id="tab-SpRJPeX"><label for="tab-SpRJPeX">java</label><input type="radio" name="group-TLYtq" id="tab-waDNbeZ"><label for="tab-waDNbeZ">python</label></div><div class="blocks"><div class="language-javascript vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StockSpanner</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 存储股票跨度</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.spanner </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 存储股票价格</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.stockPrice </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{number}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">price</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{number}</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#79B8FF;">StockSpanner</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">price</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 对于第一天进行特殊判断</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.spanner.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.spanner.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.stockPrice.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(price);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 直接返回1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> cnt </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> idx </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.stockPrice.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (price </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.stockPrice[idx] </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> idx </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    cnt </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.spanner[idx];</span></span>
<span class="line"><span style="color:#E1E4E8;">    idx </span><span style="color:#F97583;">-=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.spanner[idx];</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 加上本身</span></span>
<span class="line"><span style="color:#E1E4E8;">  cnt</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 进行更新操作，将当前股票价格和跨度入栈</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.spanner.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(cnt);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.stockPrice.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(price);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> cnt;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 存储股票跨度</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.spanner </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 存储股票价格</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.stockPrice </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{number}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">price</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{number}</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#005CC5;">StockSpanner</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">prototype</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">next</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">price</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 对于第一天进行特殊判断</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.spanner.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.spanner.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.stockPrice.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(price);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 直接返回1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> cnt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> idx </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.stockPrice.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (price </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.stockPrice[idx] </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> idx </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    cnt </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.spanner[idx];</span></span>
<span class="line"><span style="color:#24292E;">    idx </span><span style="color:#D73A49;">-=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.spanner[idx];</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 加上本身</span></span>
<span class="line"><span style="color:#24292E;">  cnt</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 进行更新操作，将当前股票价格和跨度入栈</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.spanner.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(cnt);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.stockPrice.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(price);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> cnt;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><div class="language-cpp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StockSpanner</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">public:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">StockSpanner</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">price</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> cnt </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">s.</span><span style="color:#B392F0;">empty</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> s.</span><span style="color:#B392F0;">top</span><span style="color:#E1E4E8;">().first </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> price) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            cnt </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> s.</span><span style="color:#B392F0;">top</span><span style="color:#E1E4E8;">().second;</span></span>
<span class="line"><span style="color:#E1E4E8;">            s.</span><span style="color:#B392F0;">pop</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        s.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">({price, cnt </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> cnt </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">private:</span></span>
<span class="line"><span style="color:#E1E4E8;">    stack</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">pair</span><span style="color:#F97583;">&lt;int</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int&gt;&gt;</span><span style="color:#E1E4E8;"> s;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">public:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">price</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> cnt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">s.</span><span style="color:#6F42C1;">empty</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> s.</span><span style="color:#6F42C1;">top</span><span style="color:#24292E;">().first </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> price) {</span></span>
<span class="line"><span style="color:#24292E;">            cnt </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> s.</span><span style="color:#6F42C1;">top</span><span style="color:#24292E;">().second;</span></span>
<span class="line"><span style="color:#24292E;">            s.</span><span style="color:#6F42C1;">pop</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        s.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">({price, cnt </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> cnt </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">private:</span></span>
<span class="line"><span style="color:#24292E;">    stack</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">pair</span><span style="color:#D73A49;">&lt;int</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int&gt;&gt;</span><span style="color:#24292E;"> s;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StockSpanner</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Stack&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; prices, weights;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StockSpanner</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        prices </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Stack</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        weights </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Stack</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">price</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> w </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">prices.</span><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> prices.</span><span style="color:#B392F0;">peek</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> price) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            prices.</span><span style="color:#B392F0;">pop</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            w </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> weights.</span><span style="color:#B392F0;">pop</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        prices.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(price);</span></span>
<span class="line"><span style="color:#E1E4E8;">        weights.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(w);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> w;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    Stack&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; prices, weights;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        prices </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Stack</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        weights </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Stack</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">price</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> w </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">prices.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> prices.</span><span style="color:#6F42C1;">peek</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> price) {</span></span>
<span class="line"><span style="color:#24292E;">            prices.</span><span style="color:#6F42C1;">pop</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            w </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> weights.</span><span style="color:#6F42C1;">pop</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        prices.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(price);</span></span>
<span class="line"><span style="color:#24292E;">        weights.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(w);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> w;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StockSpanner</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__init__</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.stack </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">next</span><span style="color:#E1E4E8;">(self, price: </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">) -&gt; </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        cnt </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.stack </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.stack[</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> price:</span></span>
<span class="line"><span style="color:#E1E4E8;">            cnt </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.stack.pop()[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.stack.append((price, cnt))</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> cnt</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StockSpanner</span><span style="color:#24292E;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__init__</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stack </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">next</span><span style="color:#24292E;">(self, price: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">) -&gt; </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        cnt </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stack </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stack[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> price:</span></span>
<span class="line"><span style="color:#24292E;">            cnt </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stack.pop()[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.stack.append((price, cnt))</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> cnt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div></div><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">学如逆水行舟，不进则退</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">学如逆水行舟，不进则退</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>`,16);function h(B,A,D,k,g,v){const p=E,l=c,o=r,e=t;return i(),F("div",null,[a("h1",C,[n("LeetCode 901. 股票价格跨度 "),s(p,{type:"warning",text:"中等"}),n(),d]),s(l,{readTime:"3",words:"763"}),m,s(o),s(e)])}const w=y(u,[["render",h]]);export{q as __pageData,w as default};
